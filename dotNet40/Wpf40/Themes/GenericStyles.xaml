<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="Library40.Wpf.Themes.d__mohammad_iledge_visual_studio_2010_projects_temp_wpfapplication10_wpfcustomcontrollibrary1_themes_generic_xaml">

    <Style TargetType="DataGrid">
        <Setter Property="AlternatingRowBackground" Value="#FFF4F4F4" />
        <Setter Property="ClipboardCopyMode" Value="IncludeHeader" />
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF6D6D6D" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF6D6D6D" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TreeView">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style TargetType="StatusBar">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style TargetType="DockPanel">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="20" />
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="RadioButtonListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <RadioButton Focusable="False"
                                             IsChecked="{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}">
                                    <ContentPresenter />
                                </RadioButton>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckedListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <CheckBox Focusable="False"
                                          IsChecked="{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}">
                                    <ContentPresenter />
                                </CheckBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="75" />
        <Setter Property="MinHeight" Value="20" />
        <!--<Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FFFFFF" Offset="0" />
                        <GradientStop Color="#E0E5EB" Offset=".4" />
                        <GradientStop Color="#CBD5DF" Offset=".4" />
                        <GradientStop Color="#FFFFFF" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="Button" x:Key="CircularButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="LongButton">
        <Setter Property="Width" Value="120" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="IconButton">
        <Setter Property="Width" Value="27" />
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="ShortButton">
        <Setter Property="Width" Value="50" />
    </Style>

    <Style TargetType="{x:Type StackPanel}" x:Key="ButtonStackPanelTop">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style TargetType="{x:Type StackPanel}" x:Key="ButtonStackPanelBottom">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
</ResourceDictionary>